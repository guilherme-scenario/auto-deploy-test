# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn package assembly:single -Dspring.profiles.active=local
      - name: Kill Port
        run: |
          if sudo fuser -s 8080/tcp; then
            echo "Port 8080 is in use. Killing the process..."
            sudo fuser -k 8080/tcp
          else
            exit 0
          fi
      - name: Execute Jar File
        run: >
          sudo
          AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
          SERVER_PORT=${{ secrets.SERVER_PORT }}
          ANNOTATION_TEST_1=${{ secrets.ANNOTATION_TEST_1 }} 
          ANNOTATION_TEST_2=${{ secrets.ANNOTATION_TEST_2 }}
          ANNOTATION_TEST_3=${{ secrets.ANNOTATION_TEST_3 }}
          ANNOTATION_TEST_4=${{ secrets.ANNOTATION_TEST_4 }}
          ANNOTATION_TEST_5=${{ secrets.ANNOTATION_TEST_5 }}
          ANNOTATION_TEST_6=${{ vars.VARIABLE_TEST }}
          java -jar /home/ec2-user/actions-runner/_work/auto-deploy-test/auto-deploy-test/target/auto-deploy.jar >> logs &
      - name: ==Check Status==
        env:
          MAILS_TO: "guilherme@scenario.ind.br"
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
        run: |
          sleep 10
          if grep -q "Tomcat started on port" logs && grep -q "Started" logs; then
            echo "Initialization success"
            cat logs
          else
            echo "Initialization failed. Exiting..."
            cat logs
            exit 1
          fi

      - name: ✨ Send email, you star
        uses: actions/checkout@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: quadmx08
          password: ${{ secrets.GMAIL_PASS }}
          subject: Your a star ✨
          body: ${{ github.actor }} just starred your mail-on-star repo!!! ${{ github.repository }}
          to: ${{ secrets.GMAIL_ADDRESS }}
          from: ${{ secrets.GMAIL_ADDRESS }}